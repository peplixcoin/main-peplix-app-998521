{"version":3,"file":"static/js/809.0ae6dd4d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","noop","uid","id","isNullOrUndef","isArray","Array","type","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","keyResolvers","v","x","o","y","_getKeyResolver","parts","split","tmp","push","_splitKey","obj","resolveObjectKey","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","colorLib","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","init","formats","diff","startOf","endOf","members","DateAdapterBase","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","positioners","WeakMap","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}