{"version":3,"file":"static/js/531.5b161a1d.chunk.js","mappings":"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","sources":["components/Input/InputText.js","components/Typography/ErrorText.js","features/user/Login.js","features/user/ForgotPassword.js","features/user/ResetPassword.js","pages/ResetPassword.js","../node_modules/@heroicons/react/24/solid/CheckCircleIcon.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { useState } from \"react\"\n\n\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\n\n    const [value, setValue] = useState(defaultValue)\n\n    const updateInputValue = (val) => {\n        setValue(val)\n        updateFormValue({updateType, value : val})\n    }\n\n    return(\n        <div className={`form-control w-full ${containerStyle}`}>\n            <label className=\"label\">\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\n            </label>\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\n        </div>\n    )\n}\n\n\nexport default InputText","function ErrorText({styleClass, children}){\n    return(\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\n    )\n}\n\nexport default ErrorText","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LandingIntro from './LandingIntro';\nimport ErrorText from '../../components/Typography/ErrorText';\nimport InputText from '../../components/Input/InputText';\nimport axios from 'axios';\nimport { showNotification } from '../common/headerSlice';\n\nfunction Login({ fetchUserProfile }) {\n  const INITIAL_LOGIN_OBJ = {\n    emailId: '',\n    password: '',\n  };\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loginObj, setLoginObj] = useState(INITIAL_LOGIN_OBJ);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n/*https://stlk-backend.onrender.com/api/users/login */\n  const loginWithRetry = async (data, retries = 3) => {\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/users/login`, data, { timeout: 5000 });\n      return res.data;\n    } catch (error) {\n      if (retries > 0) {\n        return loginWithRetry(data, retries - 1); // Retry logic\n      } else {\n        throw error; // After retries are exhausted\n      }\n    }\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setErrorMessage('');\n    setMessage('');\n\n    if (loginObj.emailId.trim() === '') {\n      const errorMsg = 'Email Id is required!';\n      setErrorMessage(errorMsg);\n      dispatch(showNotification({ message: errorMsg, status: 0 }));\n      return;\n    }\n\n    if (loginObj.password.trim() === '') {\n      const errorMsg = 'Password is required!';\n      setErrorMessage(errorMsg);\n      dispatch(showNotification({ message: errorMsg, status: 0 }));\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const loginData = { email: loginObj.emailId, password: loginObj.password };\n\n      const res = await loginWithRetry(loginData); // Using retry logic\n      localStorage.setItem('token', res.token);\n\n      setMessage('Login successful!');\n      dispatch(showNotification({ message: 'Login successful!', status: 1 }));\n\n      navigate('/app/dashboard');\n    } catch (error) {\n      setLoading(false);\n      const errorMsg = error.response?.data?.message || 'Failed to login after multiple attempts. Please try again later.';\n      setErrorMessage(errorMsg);\n      dispatch(showNotification({ message: errorMsg, status: 0 }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateFormValue = ({ updateType, value }) => {\n    setErrorMessage('');\n    setMessage('');\n    setLoginObj({ ...loginObj, [updateType]: value });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-base-200 flex items-center\">\n      <div className=\"card mx-auto w-full max-w-5xl shadow-xl flex justify-center items-center\">\n        <div className=\"grid md:grid-cols-1 grid-cols-1 bg-base-100 rounded-xl w-full md:w-1/2 animate-fadeIn\">\n          <div className=\"py-24 px-10\">\n            <h1 className='text-3xl text-center font-bold mb-8 '><img src=\"/logo197.png\" className=\"w-12 inline-block mr-2 mask mask-circle\" alt=\"dashwind-logo\" />Peplix</h1>\n            <h2 className=\"text-2xl font-semibold mb-2 text-center\">Login</h2>\n            <form onSubmit={submitForm}>\n              <div className=\"mb-4\">\n                <InputText\n                  type=\"email\"\n                  defaultValue={loginObj.emailId}\n                  updateType=\"emailId\"\n                  containerStyle=\"mt-4\"\n                  labelTitle=\"Email Id\"\n                  updateFormValue={updateFormValue}\n                />\n                <InputText\n                  defaultValue={loginObj.password}\n                  type=\"password\"\n                  updateType=\"password\"\n                  containerStyle=\"mt-4\"\n                  labelTitle=\"Password\"\n                  updateFormValue={updateFormValue}\n                />\n              </div>\n\n              <div className=\"text-right text-primary\">\n                <Link to=\"/forgot-password\">\n                  <span className=\"text-sm inline-block hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">\n                    Forgot Password?\n                  </span>\n                </Link>\n              </div>\n\n              {/* Show only error or success message */}\n              {errorMessage && <ErrorText styleClass=\"mt-8\">{errorMessage}</ErrorText>}\n              {message && <p className=\"mt-4 text-center text-green-500\">{message}</p>}\n\n              <button\n                type=\"submit\"\n                className={'btn mt-2 w-full btn-primary' + (loading ? ' loading' : '')}\n                disabled={loading}\n              >\n                Login\n              </button>\n\n              <div className=\"text-center mt-4\">\n                Don't have an account yet?{' '}\n                <Link to=\"/register\">\n                  <span className=\"inline-block hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">\n                    Register\n                  </span>\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LandingIntro from './LandingIntro';\nimport ErrorText from '../../components/Typography/ErrorText';\nimport InputText from '../../components/Input/InputText';\nimport CheckCircleIcon from '@heroicons/react/24/solid/CheckCircleIcon';\nimport { showNotification } from '../common/headerSlice';\n\nfunction ForgotPassword() {\n  const INITIAL_USER_OBJ = {\n    emailId: '',\n  };\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [linkSent, setLinkSent] = useState(false);\n  const [userObj, setUserObj] = useState(INITIAL_USER_OBJ);\n  const dispatch = useDispatch();\n\n  // Retry logic with timeout\n  const submitWithRetry = async (request, retries = 3, timeout = 5000) => {\n    try {\n      const controller = new AbortController();\n      const id = setTimeout(() => controller.abort(), timeout);\n\n      const res = await fetch(request.url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(request.data),\n        signal: controller.signal,\n      });\n\n      clearTimeout(id);\n\n      if (!res.ok) {\n        throw new Error('Failed to send reset link.');\n      }\n\n      return await res.json();\n    } catch (error) {\n      if (retries > 0) {\n        return submitWithRetry(request, retries - 1, timeout);\n      } else {\n        throw error;\n      }\n    }\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setErrorMessage('');\n    setLoading(true);\n\n    if (userObj.emailId.trim() === '') {\n      setLoading(false);\n      return setErrorMessage('Email Id is required!');\n    }\n\n    try {\n      const result = await submitWithRetry({\n        url: 'https://stlk-backend.onrender.com/api/users/forgot-password',\n        data: { email: userObj.emailId },\n      });\n\n      setLoading(false);\n      setLinkSent(true);\n      dispatch(showNotification({ message: 'Reset link sent successfully!', status: 1 }));\n    } catch (error) {\n      setLoading(false);\n      setErrorMessage('Error sending reset link, please try again.');\n      dispatch(showNotification({ message: 'Error sending reset link, please try again.', status: 0 }));\n    }\n  };\n\n  const updateFormValue = ({ updateType, value }) => {\n    setErrorMessage('');\n    setUserObj({ ...userObj, [updateType]: value });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-base-200 flex items-center\">\n      <div className=\"card mx-auto w-full max-w-5xl shadow-xl flex justify-center items-center\">\n        <div className=\"grid md:grid-cols-1 grid-cols-1 bg-base-100 rounded-xl w-full md:w-1/2 animate-fadeIn\">\n          <div className=\"py-24 px-10\">\n            <h1 className='text-3xl text-center font-bold mb-8'><img src=\"/logo197.png\" className=\"w-12 inline-block mr-2 mask mask-circle\" alt=\"dashwind-logo\" />Peplix</h1>\n            <h2 className=\"text-2xl font-semibold mb-2 text-center\">Forgot Password</h2>\n\n            {linkSent ? (\n              <>\n                <div className=\"text-center mt-8\">\n                  <CheckCircleIcon className=\"inline-block w-32 text-success\" />\n                </div>\n                <p className=\"my-4 text-xl font-bold text-center\">Link Sent</p>\n                <p className=\"mt-4 mb-8 font-semibold text-center\">\n                  Check your email to reset the password\n                </p>\n                <div className=\"text-center mt-4\">\n                  <Link to=\"/login\">\n                    <button className=\"btn btn-block btn-primary\">Login</button>\n                  </Link>\n                </div>\n              </>\n            ) : (\n              <>\n                <p className=\"my-8 font-semibold text-center\">\n                  We will send a password reset link to your email address\n                </p>\n                <form onSubmit={submitForm}>\n                  <div className=\"mb-4\">\n                    <InputText\n                      type=\"emailId\"\n                      defaultValue={userObj.emailId}\n                      updateType=\"emailId\"\n                      containerStyle=\"mt-4\"\n                      labelTitle=\"Email Id\"\n                      updateFormValue={updateFormValue}\n                    />\n                  </div>\n\n                  <ErrorText styleClass=\"mt-12\">{errorMessage}</ErrorText>\n                  <button\n                    type=\"submit\"\n                    className={`btn mt-2 w-full btn-primary ${loading ? 'loading' : ''}`}\n                    disabled={loading}\n                  >\n                    Send Reset Link\n                  </button>\n\n                  <div className=\"text-center mt-4\">\n                    Don't have an account yet?{' '}\n                    <Link to=\"/register\">\n                      <span className=\"inline-block hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">\n                        Register\n                      </span>\n                    </Link>\n                  </div>\n                </form>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // Import useDispatch from react-redux\nimport LandingIntro from './LandingIntro';\nimport ErrorText from '../../components/Typography/ErrorText';\nimport InputText from '../../components/Input/InputText';\nimport CheckCircleIcon from '@heroicons/react/24/solid/CheckCircleIcon';\nimport { showNotification } from '../common/headerSlice'; // Import showNotification action\n\nfunction ResetPassword() {\n  const { token } = useParams(); // Get the token from the URL\n  const navigate = useNavigate(); // To redirect after successful password reset\n  const dispatch = useDispatch(); // Initialize dispatch\n\n  const INITIAL_USER_OBJ = {\n    password: '',\n    confirmPassword: '',\n  };\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [passwordReset, setPasswordReset] = useState(false);\n  const [userObj, setUserObj] = useState(INITIAL_USER_OBJ);\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setErrorMessage('');\n\n    if (userObj.password.trim() === '') return setErrorMessage('Password is required!');\n    if (userObj.confirmPassword.trim() === '') return setErrorMessage('Confirm Password is required!');\n    if (userObj.password !== userObj.confirmPassword) return setErrorMessage('Passwords do not match!');\n\n    setLoading(true);\n\n    try {\n      // Make the API request to reset the password\n      const response = await fetch(`https://stlk-backend.onrender.com/api/users/reset-password/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: userObj.password }),\n      });\n\n      const result = await response.json();\n      setLoading(false);\n\n      if (response.ok) {\n        setPasswordReset(true); // Show success message\n        dispatch(showNotification({ message: 'Password reset successful!', status: 1 })); // Notify success\n        setTimeout(() => navigate('/login'), 3000); // Redirect to login after 3 seconds\n      } else {\n        if (result.message === 'Invalid or expired token') {\n          setErrorMessage('Your reset token has expired. Please request a new one.');\n          dispatch(showNotification({ message: 'Your reset token has expired. Please request a new one.', status: 0 })); // Notify error\n        } else {\n          setErrorMessage(result.message || 'Something went wrong.');\n          dispatch(showNotification({ message: result.message || 'Something went wrong.', status: 0 })); // Notify error\n        }\n      }\n    } catch (error) {\n      setLoading(false);\n      setErrorMessage('Error resetting password, please try again.');\n      dispatch(showNotification({ message: 'Error resetting password, please try again.', status: 0 })); // Notify error\n    }\n  };\n\n  const updateFormValue = ({ updateType, value }) => {\n    setErrorMessage('');\n    setUserObj({ ...userObj, [updateType]: value });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-base-200 flex items-center\">\n      <div className=\"card mx-auto w-full max-w-5xl shadow-xl flex justify-center items-center\">\n        <div className=\"grid md:grid-cols-1 grid-cols-1 bg-base-100 rounded-xl w-full md:w-1/2 animate-fadeIn\">\n          <div className=\"py-24 px-10\">\n            <h1 className='text-3xl text-center font-bold '><img src=\"/logo197.png\" className=\"w-12 inline-block mr-2 mask mask-circle\" alt=\"dashwind-logo\" />Peplix</h1>\n            <h2 className=\"text-2xl font-semibold mb-2 mt-10 text-center\">Reset Password</h2>\n\n            {passwordReset ? (\n              <>\n                <div className=\"text-center mt-8\">\n                  <CheckCircleIcon className=\"inline-block w-32 text-success\" />\n                </div>\n                <p className=\"my-4 text-xl font-bold text-center\">Password Reset Successful</p>\n                <p className=\"mt-4 mb-8 font-semibold text-center\">\n                  Redirecting to login...\n                </p>\n              </>\n            ) : (\n              <>\n                <p className=\"my-8 font-semibold text-center\">\n                  Enter your new password below.\n                </p>\n                <form onSubmit={submitForm}>\n                  <div className=\"mb-4\">\n                    <InputText\n                      type=\"password\"\n                      defaultValue={userObj.password}\n                      updateType=\"password\"\n                      containerStyle=\"mt-4\"\n                      labelTitle=\"New Password\"\n                      updateFormValue={updateFormValue}\n                    />\n                    <InputText\n                      type=\"password\"\n                      defaultValue={userObj.confirmPassword}\n                      updateType=\"confirmPassword\"\n                      containerStyle=\"mt-4\"\n                      labelTitle=\"Confirm Password\"\n                      updateFormValue={updateFormValue}\n                    />\n                  </div>\n\n                  <ErrorText styleClass=\"mt-12\">{errorMessage}</ErrorText>\n                  <button\n                    type=\"submit\"\n                    className={`btn mt-2 w-full btn-primary ${loading ? 'loading' : ''}`}\n                    disabled={loading}\n                  >\n                    Reset Password\n                  </button>\n\n                  <div className=\"text-center mt-4\">\n                    <Link to=\"/login\">\n                      <span className=\"inline-block hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">\n                        Back to Login\n                      </span>\n                    </Link>\n                  </div>\n                </form>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n","import { useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport ForgotPassword from '../features/user/ForgotPassword'\nimport Login from '../features/user/Login'\nimport ResetPassword from '../features/user/ResetPassword'\n\nfunction ExternalPage() {\n\n\n  return (\n    <div className=\"\">\n      <ResetPassword />\n    </div>\n  )\n}\n\nexport default ExternalPage","const React = require(\"react\");\n\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckCircleIcon);\nmodule.exports = ForwardRef;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","useState","value","setValue","className","onChange","e","val","target","styleClass","children","fetchUserProfile","loading","setLoading","errorMessage","setErrorMessage","emailId","password","loginObj","setLoginObj","message","setMessage","navigate","useNavigate","dispatch","useDispatch","loginWithRetry","data","retries","axios","process","timeout","res","submitForm","preventDefault","trim","errorMsg","showNotification","status","loginData","email","localStorage","setItem","token","response","src","alt","onSubmit","to","disabled","useParams","passwordReset","setPasswordReset","confirmPassword","userObj","setUserObj","fetch","method","headers","body","JSON","stringify","json","result","ok","setTimeout","React","require","ForwardRef","forwardRef","svgRef","title","titleId","props","createElement","Object","assign","xmlns","viewBox","fill","ref","id","fillRule","d","clipRule","module","exports","objectWithoutPropertiesLoose","source","excluded","key","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","__esModule","sourceKeys","keys"],"sourceRoot":""}