{"version":3,"file":"static/js/738.3172d4b5.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/withdraw/WithdrawalsHistory.js","features/withdraw/index.js","pages/protected/Calendar.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TitleCard from \"../../components/Cards/TitleCard\";\nimport moment from 'moment';\n\nfunction WithdrawalsHistory() {\n  const [withdrawals, setWithdrawals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Retry logic for fetching data\n  const fetchDataWithRetry = async (url, options = {}, retries = 3) => {\n    try {\n      const res = await axios.get(url, { ...options, timeout: 5000 }); // 5-second timeout\n      return res.data;\n    } catch (error) {\n      if (retries > 0) {\n        return fetchDataWithRetry(url, options, retries - 1); // Retry the request\n      } else {\n        throw error; // Throw error after retries are exhausted\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchWithdrawals = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const data = await fetchDataWithRetry(`${process.env.REACT_APP_API_URL}/api/users/withdrawals-history`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        setWithdrawals(data);\n        setError(''); // Clear any previous error\n      } catch (error) {\n        console.error(\"Error fetching withdrawals:\", error);\n        setError('Failed to load withdrawal history. Please try again.');\n      } finally {\n        setLoading(false); // Stop loading state\n      }\n    };\n\n    fetchWithdrawals();\n  }, []);\n\n  const getWithdrawStatus = (status) => {\n    if (status === \"approved\") return <div className=\"badge badge-success\">{status}</div>;\n    if (status === \"pending\") return <div className=\"badge badge-primary\">{status}</div>;\n    if (status === \"rejected\") return <div className=\"badge badge-error\">{status}</div>;\n    return <div className=\"badge badge-ghost\">{status}</div>;\n  };\n\n  if (loading) return <p className=\"text-center mt-4\">Loading...</p>;\n  if (error) return <p className=\"text-center text-red-500\">{error}</p>;\n\n  return (\n    <>\n      <div className=\"mt-5 grid grid-cols-1 gap-6 mb-6 animate-fadeIn\">\n        <TitleCard title=\"Withdrawal History\" topMargin=\"mt-2\">\n          {withdrawals.length === 0 ? (\n            <p className=\"text-center\">No withdrawals found</p>\n          ) : (\n            <div className=\"overflow-x-auto w-full\">\n              <table className=\"table w-full\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Tokens</th>\n                    <th>Value ($)</th>\n                    <th>Wallet Adress</th>\n                    <th>Status</th>\n                    <th>Transaction ID</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {withdrawals.map((withdrawal, index) => (\n                    <tr key={index}>\n                      <td className=\"p-4\">{moment(withdrawal.requestedAt).format(\"DD MMM YYYY\")}</td>\n                      <td className=\"p-4\">{withdrawal.noOfTokens}</td>\n                      <td className=\"p-4\">${withdrawal.value}</td>\n                      <td className=\"p-4\">{withdrawal.upiId}</td>\n                      <td className=\"p-4\">{getWithdrawStatus(withdrawal.status)}</td>\n                      <td className=\"p-4\">{withdrawal.utrNo || 'N/A'}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </TitleCard>\n      </div>\n    </>\n  );\n}\n\nexport default WithdrawalsHistory;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showNotification, clearNotification } from '../common/headerSlice';\nimport TitleCard from \"../../components/Cards/TitleCard\";\nimport axios from 'axios';\nimport WithdrawalsHistory from './WithdrawalsHistory';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Withdraw() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [noOfTokens, setNoOfTokens] = useState('');\n  const [upiId, setUpiId] = useState('');\n  const [confirmUpiId, setConfirmUpiId] = useState('');\n  const [transactionPackages, setTransactionPackages] = useState([]);\n  const [selectedTransaction, setSelectedTransaction] = useState('');\n  const [message, setMessage] = useState('');\n  const [redirectCountdown, setRedirectCountdown] = useState(null);\n\n  // Retry logic for fetching data\n  const fetchDataWithRetry = async (url, options = {}, retries = 4) => {\n    try {\n      const res = await axios.get(url, { ...options, timeout: 5000 });\n      return res.data;\n    } catch (error) {\n      if (retries > 0) {\n        return fetchDataWithRetry(url, options, retries - 1);\n      } else {\n        throw error;\n      }\n    }\n  };\n\n  // Fetch token value from the backend\n  useEffect(() => {\n    dispatch(clearNotification());\n  }, [dispatch]);\n\n  // Fetch user's approved transactions\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const data = await fetchDataWithRetry(`${process.env.REACT_APP_API_URL}/api/users/transactions`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        setTransactionPackages(data);\n      } catch (error) {\n        console.error('Error fetching transaction packages', error);\n        dispatch(showNotification({ message: 'Failed to fetch transaction packages.', status: 0 }));\n      }\n    };\n    fetchTransactions();\n  }, [dispatch]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!selectedTransaction) {\n      dispatch(showNotification({ message: 'Please select a transaction package.', status: 0 }));\n      return;\n    }\n\n    const selectedPackage = transactionPackages.find(pkg => pkg._id === selectedTransaction);\n\n    if (noOfTokens > selectedPackage.tokensAvailable) {\n      dispatch(showNotification({ message: 'Insufficient tokens in this package to withdraw.', status: 0 }));\n      return;\n    }\n\n    const totalTokens = selectedPackage.tokensAvailable + selectedPackage.tokensWithdrawn;\n    if (totalTokens < selectedPackage.min_tokens_req) {\n      dispatch(showNotification({ message: `You need a minimum of ${selectedPackage.min_tokens_req} tokens to withdraw from this package.`, status: 0 }));\n      return;\n    }\n\n    if (upiId !== confirmUpiId) {\n      dispatch(showNotification({ message: 'Wallet Address IDs do not match. Please re-enter.', status: 0 }));\n      return;\n    }\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/users/withdraw`,\n        { noOfTokens, upiId, transactionId: selectedTransaction },\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        }\n      );\n      setMessage(res.data.message);\n      dispatch(showNotification({ message: 'Withdrawal Request sent successfully. Redirecting to dashboard in 5 seconds...', status: 1 }));\n\n      setNoOfTokens('');\n      setUpiId('');\n      setConfirmUpiId('');\n      setSelectedTransaction('');\n\n      setRedirectCountdown(5);\n      const interval = setInterval(() => {\n        setRedirectCountdown((prevCountdown) => {\n          if (prevCountdown <= 1) {\n            clearInterval(interval);\n            navigate('/app/dashboard');\n          }\n          return prevCountdown - 1;\n        });\n      }, 1000);\n\n    } catch (error) {\n      const errorMsg = error.response?.data?.message || 'Error processing withdrawal';\n      dispatch(showNotification({ message: errorMsg, status: 0 }));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <div className=\"animate-fadeIn mx-auto shadow-lg rounded-lg\">\n          <TitleCard title=\"Withdraw Tokens\" topMargin=\"mt-0\">\n            {/* Transaction Selection */}\n            <div className=\"mb-6\">\n              <label htmlFor=\"transactionPackage\" className=\"block text-lg font-semibold text-gray-600 mb-2\">\n                Select Transaction Package:\n              </label>\n              <select\n                id=\"transactionPackage\"\n                value={selectedTransaction}\n                onChange={(e) => setSelectedTransaction(e.target.value)}\n                className=\"input input-bordered w-full p-3 border-gray-300 rounded-md\"\n                required\n              >\n                <option value=\"\">Select a package</option>\n                {transactionPackages\n                  .filter((pkg) => pkg.status === 'approved')\n                  .map((pkg) => (\n                    <option key={pkg._id} value={pkg._id}>\n                      {pkg.packageName} - {pkg.tokensAvailable.toFixed(2)} tokens available\n                    </option>\n                  ))}\n              </select>\n            </div>\n\n            {/* Number of Tokens */}\n            <div className=\"mb-6\">\n              <label htmlFor=\"tokens\" className=\"block text-lg font-semibold text-gray-600 mb-2\">\n                Enter Number of Tokens:\n              </label>\n              <input\n                type=\"number\"\n                id=\"tokens\"\n                value={noOfTokens}\n                onChange={(e) => setNoOfTokens(e.target.value)}\n                className=\"input input-bordered w-full p-3 border-gray-300 rounded-md\"\n                placeholder=\"Enter number of tokens\"\n                required\n              />\n            </div>\n\n            {/* Wallet Address ID */}\n            <div className=\"mb-6\">\n              <label htmlFor=\"upiId\" className=\"block text-lg font-semibold text-gray-600 mb-2\">\n                Wallet Address :\n              </label>\n              <input\n                type=\"text\"\n                id=\"upiId\"\n                value={upiId}\n                onChange={(e) => setUpiId(e.target.value)}\n                className=\"input input-bordered w-full p-3 border-gray-300 rounded-md\"\n                placeholder=\"Enter your Wallet Address ID\"\n                required\n              />\n            </div>\n\n            {/* Confirm Wallet Address ID */}\n            <div className=\"mb-6\">\n              <label htmlFor=\"confirmUpiId\" className=\"block text-lg font-semibold text-gray-600 mb-2\">\n                Confirm Wallet Address :\n              </label>\n              <input\n                type=\"text\"\n                id=\"confirmUpiId\"\n                value={confirmUpiId}\n                onChange={(e) => setConfirmUpiId(e.target.value)}\n                className=\"input input-bordered w-full p-3 border-gray-300 rounded-md\"\n                placeholder=\"Re-enter your Wallet Address ID\"\n                required\n              />\n            </div>\n\n            {/* Withdraw Button */}\n            <button\n              onClick={handleSubmit}\n              className=\"btn btn-primary w-full p-3 font-bold rounded-md hover:bg-blue-700 transition duration-300 mt-1\"\n            >\n              Submit Withdrawal Request\n            </button>\n\n            {/* Success Message */}\n            {message && (\n              <p className=\"mt-4 text-center text-green-600 font-semibold\">\n                {message}\n              </p>\n            )}\n\n            {/* Countdown for redirection */}\n            {redirectCountdown !== null && (\n              <p className=\"mt-4 text-center text-gray-600 font-semibold\">\n                Redirecting to dashboard in {redirectCountdown} second{redirectCountdown !== 1 ? 's' : ''}.\n              </p>\n            )}\n          </TitleCard>\n        </div>\n\n        {/* Withdrawals History Component */}\n        <WithdrawalsHistory />\n      </div>\n    </>\n  );\n}\n\nexport default Withdraw;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Calendar from '../../features/withdraw'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Withdraw\"}))\n      }, [])\n\n\n    return(\n        <Calendar />\n    )\n}\n\nexport default InternalPage"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","useState","withdrawals","setWithdrawals","loading","setLoading","error","setError","fetchDataWithRetry","url","options","retries","axios","timeout","res","data","useEffect","fetchWithdrawals","token","localStorage","getItem","process","headers","Authorization","console","TitleCard","length","map","withdrawal","index","moment","requestedAt","format","noOfTokens","value","upiId","status","utrNo","dispatch","useDispatch","navigate","useNavigate","setNoOfTokens","setUpiId","confirmUpiId","setConfirmUpiId","transactionPackages","setTransactionPackages","selectedTransaction","setSelectedTransaction","message","setMessage","redirectCountdown","setRedirectCountdown","clearNotification","fetchTransactions","showNotification","handleSubmit","e","preventDefault","selectedPackage","find","pkg","_id","tokensAvailable","tokensWithdrawn","min_tokens_req","transactionId","interval","setInterval","prevCountdown","clearInterval","errorMsg","response","htmlFor","id","onChange","target","required","filter","packageName","toFixed","type","placeholder","onClick","setPageTitle"],"sourceRoot":""}