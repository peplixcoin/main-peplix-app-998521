{"version":3,"file":"static/js/537.4af2f71e.chunk.js","mappings":"kLA6BE,IA1BA,SAAmB,GAA8C,IAA7CA,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAC5C,OACI,iBAAKC,UAAW,0CAA4CF,GAAa,QAAQ,WAG7E,UAAC,IAAQ,CAACG,WAAYF,EAAiB,eAAiB,GAAG,UACxDH,EAIGG,IAAkB,gBAAKC,UAAU,2BAA0B,SAAED,QAInE,gBAAKC,UAAU,kBAGf,gBAAKA,UAAU,iCAAgC,SAC1CH,MAKjB,C,oCCpBF,IANC,SAAkB,GAAwB,IAAvBI,EAAU,EAAVA,WAAYJ,EAAQ,EAARA,SAC5B,OACI,gBAAKG,UAAS,gCAA2BC,GAAa,SAAEJ,GAEhE,C,2KC8EA,MA3EA,WACE,OAAgCK,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAA8BF,EAAAA,EAAAA,WAAS,GAAK,eAArCG,EAAO,KAAEC,EAAU,KAC1B,GAA0BJ,EAAAA,EAAAA,UAAS,MAAK,eAAjCK,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGXC,EAAkB,yCAAG,WAAOC,GAAG,0FAAa,OAAXC,EAAO,+BAAG,EAAC,kBAE5BC,EAAAA,EAAAA,IAAUF,EAAK,CAAEG,QAAS,MAAQ,KAAD,EAA1C,OAAHC,EAAG,yBACFA,EAAIC,MAAI,qCAEXJ,EAAU,GAAC,0CACNF,EAAmBC,EAAKC,EAAU,IAAE,4EAKhD,gBAXuB,sCAwCxB,OA3BAK,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,OACT,IAAMC,EAAa,yCAAG,oHAECT,EAAmB,4CAA4C,KAAD,EAA3EM,EAAI,OAGJI,EAAiBJ,EAAKK,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,MAAQD,EAAEC,KAAK,IAE5DvB,EAAYmB,GACZf,EAAS,MAAO,gDAEhBA,EAAS,qDACToB,QAAQrB,MAAM,2BAA2B,EAAD,IAAO,QAE5B,OAF4B,UAE/CD,GAAW,GAAQ,4EAEtB,kBAfkB,mCAiBnBgB,GACF,GAAG,IAOCjB,GAAgB,+CAChBE,GAAc,cAAGP,UAAU,eAAc,SAAEO,KAG7C,gBAAKP,UAAU,qBAAoB,UAIjC,gBAAKA,UAAU,wDAAuD,SACnEG,EAAS0B,KAAI,SAACC,GAAG,OAChB,UAACC,EAAA,EAAS,CAAenC,MAAOkC,EAAIE,KAAMlC,UAAU,OAAM,WACxD,eAAGE,UAAU,OAAM,qBACV,kBAAMA,UAAU,iBAAgB,cAAG8B,EAAIH,aAEhD,mBACE3B,UAAU,8BACViC,QAAS,kBApBM,SAACH,GAC1BrB,EAAS,6BAAD,OAA8BqB,EAAII,KAC5C,CAkB2BC,CAAmBL,EAAI,EAAC,uBAN3BA,EAAII,IAUR,OAKtB,EC9DA,MAbA,WAEI,IAAMvB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAQ,EAAAA,EAAAA,YAAU,WACNT,GAASyB,EAAAA,EAAAA,IAAa,CAAExC,MAAQ,aAClC,GAAG,KAGD,SAAC,EAAW,GAEpB,C","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/tokenpackages/index.js","pages/protected/Integration.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport TitleCard from \"../../components/Cards/TitleCard\";\nimport { clearNotification } from '../common/headerSlice';\nimport { useDispatch } from \"react-redux\";\n\nfunction PackageList() {\n  const [packages, setPackages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // Retry logic for fetching data\n  const fetchDataWithRetry = async (url, retries = 3) => {\n    try {\n      const res = await axios.get(url, { timeout: 5000 }); // Timeout after 5 seconds\n      return res.data;\n    } catch (err) {\n      if (retries > 0) {\n        return fetchDataWithRetry(url, retries - 1);\n      } else {\n        throw err; // Throw error after retries are exhausted\n      }\n    }\n  };\n\n  useEffect(() => {\n    dispatch(clearNotification());\n    const fetchPackages = async () => {\n      try {\n        const data = await fetchDataWithRetry('http://localhost:5000/api/users/packages');\n\n        // Sort the packages by price in ascending order\n        const sortedPackages = data.sort((a, b) => a.price - b.price);\n\n        setPackages(sortedPackages);\n        setError(null); // Clear any previous errors\n      } catch (err) {\n        setError('Failed to fetch packages. Please try again later.');\n        console.error('Error fetching packages:', err);\n      } finally {\n        setLoading(false); // Hide loading state when finished\n      }\n    };\n\n    fetchPackages();\n  }, []);\n\n  // Handle package buy click\n  const handlePackageClick = (pkg) => {\n    navigate(`/app/packages/buy-package/${pkg._id}`);\n  };\n\n  if (loading) return <p>Loading packages...</p>;\n  if (error) return <p className=\"text-red-500\">{error}</p>;\n\n  return (\n    <div className=\"container mx-auto \">\n      {/* Title for Available Packages */}\n\n      {/* Grid for Package Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6  animate-fadeIn\">\n        {packages.map((pkg) => (\n          <TitleCard key={pkg._id} title={pkg.name} topMargin=\"mt-4\">\n            <p className=\"mb-6\">\n              Price: <span className=\"text-green-600\">${pkg.price}</span>\n            </p>\n            <button\n              className=\"btn btn-primary w-full mt-4\"\n              onClick={() => handlePackageClick(pkg)}\n            >\n              Buy Now\n            </button>\n          </TitleCard>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PackageList;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Integration from '../../features/tokenpackages'\n\nfunction InternalPage(){\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Packages\"}))\n      }, [])\n      \n    return(\n        <Integration />\n    )\n}\n\nexport default InternalPage"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","useState","packages","setPackages","loading","setLoading","error","setError","navigate","useNavigate","dispatch","useDispatch","fetchDataWithRetry","url","retries","axios","timeout","res","data","useEffect","clearNotification","fetchPackages","sortedPackages","sort","a","b","price","console","map","pkg","TitleCard","name","onClick","_id","handlePackageClick","setPageTitle"],"sourceRoot":""}