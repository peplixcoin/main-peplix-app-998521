{"version":3,"file":"static/js/951.e0bc2294.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/tokenpackages/PackageDetails.js","pages/protected/PackageDetails.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport TitleCard from \"../../components/Cards/TitleCard\";\nimport { useDispatch } from 'react-redux';\nimport CurrencyDollarIcon from '@heroicons/react/24/outline/CurrencyDollarIcon';\nimport { showNotification, clearNotification } from '../common/headerSlice';\n\nfunction PackageDetails() {\n    const { packageId } = useParams();\n    const [packageDetails, setPackageDetails] = useState(null);\n    const [tokenValue, setTokenValue] = useState(null); // New state for tokenValue\n    const [calculatedTokens, setCalculatedTokens] = useState(null); // New state for calculated tokens\n    const [message, setMessage] = useState('');\n    const [utr, setUTR] = useState('');\n    const [isUTRVisible, setIsUTRVisible] = useState(false);\n    const [redirectCountdown, setRedirectCountdown] = useState(null);\n    const [paymentStarted, setPaymentStarted] = useState(false);\n    const [timeLeft, setTimeLeft] = useState(600); // Timer set for 10 minutes\n    const [showQRCode, setShowQRCode] = useState(false);\n    const [qrCodeUrl, setQRCodeUrl] = useState(null); // QR code URL state\n    const [amountInINR, setAmountInINR] = useState(0);\n    const [isSubmitting, setIsSubmitting] = useState(false); // To disable the button while retrying\n    const [showStakingOptions, setShowStakingOptions] = useState(false); // Control staking options visibility\n    const [stakingType, setStakingType] = useState('fixed'); // Default to fixed staking\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const walletAddress = \"TPkFPwgUZHnntSH6djHDH9GFggbgkGipH9\"; // Static wallet address\n\n    const fetchDataWithRetry = async (url, retries = 3) => {\n        try {\n            const res = await axios.get(url, { timeout: 5000 });\n            return res.data;\n        } catch (err) {\n            if (retries > 0) {\n                return fetchDataWithRetry(url, retries - 1);\n            } else {\n                throw err;\n            }\n        }\n    };\n\n    // Fetch package details\n    useEffect(() => {\n        dispatch(clearNotification());\n        const fetchPackageDetails = async () => {\n            try {\n                const data = await fetchDataWithRetry(`http://localhost:5000/api/users/packages/${packageId}`);\n                setPackageDetails(data);\n            } catch (err) {\n                console.error('Failed to fetch package details', err);\n                dispatch(showNotification({ message: 'Failed to load package details. Please try again later.', status: 0 }));\n            }\n        };\n        fetchPackageDetails();\n    }, [packageId, dispatch]);\n\n    // Fetch tokenValue from /stats\n    useEffect(() => {\n        const fetchTokenValue = async () => {\n            try {\n                const data = await fetchDataWithRetry('http://localhost:5000/api/users/stats', {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n                });\n                if (data && data.tokenValue > 0) {\n                    setTokenValue(data.tokenValue);\n                } else {\n                    setMessage('Invalid or missing token value.');\n                    dispatch(showNotification({ message: 'Invalid or missing token value.', status: 0 }));\n                }\n            } catch (err) {\n                console.error('Failed to fetch token value:', err);\n                setMessage('Failed to fetch token value.');\n                dispatch(showNotification({ message: 'Failed to fetch token value.', status: 0 }));\n            }\n        };\n        fetchTokenValue();\n    }, [dispatch]);\n\n    // Calculate tokens when packageDetails and tokenValue are available\n    useEffect(() => {\n        if (packageDetails && tokenValue) {\n            const tokens = Math.floor(packageDetails.price / tokenValue);\n            setCalculatedTokens(tokens);\n        }\n    }, [packageDetails, tokenValue]);\n\n    // Fetch USD rate and calculate amountInINR\n    useEffect(() => {\n        const fetchUSDRate = async () => {\n            try {\n                const data = await fetchDataWithRetry('http://localhost:5000/api/users/usd-rate');\n                const rateInINR = data.rate;\n                if (packageDetails) {\n                    setAmountInINR((packageDetails.price * rateInINR).toFixed(2));\n                }\n            } catch (err) {\n                console.error('Failed to fetch USD exchange rate:', err);\n                setMessage('Failed to fetch the exchange rate.');\n                dispatch(showNotification({ message: 'Failed to fetch the exchange rate.', status: 0 }));\n            }\n        };\n\n        if (packageDetails) {\n            fetchUSDRate();\n        }\n    }, [packageDetails]);\n\n    // Fetch QR code\n    useEffect(() => {\n        if (showQRCode) {\n            fetchQRCodeWithRetry();\n        }\n    }, [showQRCode]);\n\n    const fetchQRCodeWithRetry = async (retries = 3) => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/users/qr-code', {\n                responseType: 'arraybuffer',\n            });\n            const imageBlob = new Blob([response.data], { type: response.headers['content-type'] });\n            const imageUrl = URL.createObjectURL(imageBlob);\n            setQRCodeUrl(imageUrl);\n        } catch (error) {\n            if (retries > 0) {\n                console.warn('Retrying to fetch QR code...');\n                return fetchQRCodeWithRetry(retries - 1);\n            } else {\n                console.error('Failed to fetch QR code after multiple attempts:', error);\n                setMessage('Failed to load QR code. Please try again.');\n                dispatch(showNotification({ message: 'Failed to load QR code. Please try again.', status: 0 }));\n            }\n        }\n    };\n\n    // Handle timer for payment\n    useEffect(() => {\n        if (paymentStarted && timeLeft > 0) {\n            const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n            return () => clearTimeout(timer);\n        }\n\n        if (timeLeft === 0) {\n            setMessage(\"Payment time has expired. Redirecting to dashboard in 5 seconds.\");\n            setShowQRCode(false);\n            setPaymentStarted(false);\n            setShowStakingOptions(false);\n\n            setRedirectCountdown(5);\n            const interval = setInterval(() => {\n                setRedirectCountdown((prevCountdown) => {\n                    if (prevCountdown <= 1) {\n                        clearInterval(interval);\n                        navigate('/app/dashboard');\n                    }\n                    return prevCountdown - 1;\n                });\n            }, 1000);\n        }\n    }, [paymentStarted, timeLeft, navigate]);\n\n    const handlePurchase = () => {\n        setShowStakingOptions(true); // Show staking options directly\n    };\n\n    const handlePaymentDone = () => {\n        setShowQRCode(false);\n        setPaymentStarted(false);\n        setIsUTRVisible(true);\n        setShowStakingOptions(false);\n    };\n\n    const handleSubmitUTR = async () => {\n        if (!utr.trim()) {\n            setMessage('Please enter the Transaction ID before submitting.');\n            dispatch(showNotification({ message: 'Please enter the Transaction ID before submitting.', status: 0 }));\n            return;\n        }\n\n        if (utr.length !== 64) {\n            setMessage('Please enter a valid 64-digit Transaction ID.');\n            dispatch(showNotification({ message: 'Please enter a valid 64-digit Transaction ID.', status: 0 }));\n            return;\n        }\n\n        if (window.confirm('Are you sure you want to submit this Transaction ID?')) {\n            setIsSubmitting(true);\n\n            const token = localStorage.getItem('token');\n            const submitUTRWithRetry = async (retries = 3) => {\n                try {\n                    const response = await axios.post(\n                        'http://localhost:5000/api/users/submit-utr',\n                        {\n                            packageId: packageDetails._id,\n                            packageAmount: packageDetails.price,\n                            packageName: packageDetails.name,\n                            stackingPeriod: packageDetails.stacking_period,\n                            min_tokens_req: packageDetails.min_tokens_req,\n                            utr,\n                            amountInINR,\n                        },\n                        { headers: { Authorization: `Bearer ${token}` }, timeout: 5000 }\n                    );\n\n                    setMessage(`Transaction ID submitted successfully! You will receive ${response.data.tokens} tokens. Transaction is pending approval.`);\n                    dispatch(showNotification({ \n                        message: `Transaction ID submitted successfully! You will receive ${response.data.tokens} tokens. Redirecting to dashboard in 5 seconds...`, \n                        status: 1 \n                    }));\n                    setIsUTRVisible(false);\n\n                    setRedirectCountdown(5);\n                    const interval = setInterval(() => {\n                        setRedirectCountdown((prevCountdown) => {\n                            if (prevCountdown <= 1) {\n                                clearInterval(interval);\n                                navigate('/app/dashboard');\n                            }\n                            return prevCountdown - 1;\n                        });\n                    }, 1000);\n                } catch (err) {\n                    if (err.response && err.response.status === 400 && err.response.data.message === 'Transaction ID has already been submitted. Please use a unique Transaction ID.') {\n                        setMessage('This Transaction ID has already been submitted. Please enter a unique Transaction ID.');\n                        dispatch(showNotification({ message: 'This Transaction ID has already been submitted. Please enter a unique Transaction ID.', status: 0 }));\n                    } else if (retries > 0) {\n                        return submitUTRWithRetry(retries - 1);\n                    } else {\n                        setMessage('Failed to submit Transaction ID after multiple attempts. Please try again.');\n                        dispatch(showNotification({ message: 'Failed to submit Transaction ID after multiple attempts. Please try again.', status: 0 }));\n                    }\n                } finally {\n                    setIsSubmitting(false);\n                }\n            };\n\n            submitUTRWithRetry();\n        }\n    };\n\n    const handleStakingChange = (e) => {\n        setStakingType(e.target.value);\n    };\n\n    const handleStakingConfirm = () => {\n        setShowQRCode(true);\n        setPaymentStarted(true);\n        setShowStakingOptions(false);\n    };\n\n    if (!packageDetails || tokenValue === null) {\n        return (\n            <div className=\"flex justify-center items-center h-screen\">\n                <p className=\"text-lg text-gray-600\">Loading package details...</p>\n            </div>\n        );\n    }\n\n    // Calculate displayed tokens based on staking type\n    const displayedTokens = stakingType === 'smart' && calculatedTokens ? Math.floor(calculatedTokens * 0.65) : calculatedTokens;\n\n    return (\n        <div className=\"container mx-auto animate-fadeIn\">\n            <TitleCard title={`${packageDetails.name}`} topMargin=\"mt-2\">\n                <div className=\"mb-6\">\n                    <p className=\"text-lg\"><strong>Price:</strong> <span className=\"text-green-600\">${packageDetails.price}</span></p>\n                    <p className=\"text-lg\"><strong>Tokens:</strong> {displayedTokens !== null ? displayedTokens : 'Calculating...'}</p>\n                    <p className=\"text-lg\"><strong>Stacking Period:</strong> {packageDetails.stacking_period} days</p>\n                    <p className=\"text-lg\"><strong>Features:</strong></p>\n                    <ul className=\"list-disc ml-6 text-lg\">\n                        {packageDetails.feature1 && <li>{packageDetails.feature1}</li>}\n                        {packageDetails.feature2 && <li>{packageDetails.feature2}</li>}\n                        {packageDetails.feature3 && <li>{packageDetails.feature3}</li>}\n                        {packageDetails.feature4 && <li>{packageDetails.feature4}</li>}\n                    </ul>\n                    <p className=\"text-lg text-red-500 mt-2\"><strong>Minimum Tokens:</strong> {packageDetails.min_tokens_req}</p>\n                </div>\n\n                {!isUTRVisible && (\n                    <>\n                        {!showQRCode && !showStakingOptions && (\n                            <button\n                                onClick={handlePurchase}\n                                className=\"btn btn-primary w-full py-3 font-bold rounded-md hover:bg-blue-700 transition duration-300\"\n                            >\n                                Buy Now\n                            </button>\n                        )}\n\n                        {showStakingOptions && (\n                            <div className=\"mt-4\">\n                                <h4 className=\"text-lg font-semibold mb-4\">Choose Staking Option</h4>\n                                <div className=\"flex flex-col space-y-2 mb-4\">\n                                    <label className=\"flex items-center\">\n                                        <input\n                                            type=\"radio\"\n                                            name=\"stakingType\"\n                                            value=\"fixed\"\n                                            checked={stakingType === 'fixed'}\n                                            onChange={handleStakingChange}\n                                            className=\"mr-2\"\n                                        />\n                                        <span className=\"text-lg\">Fixed Staking</span>\n                                    </label>\n                                    <label className=\"flex items-center\">\n                                        <input\n                                            type=\"radio\"\n                                            name=\"stakingType\"\n                                            value=\"smart\"\n                                            checked={stakingType === 'smart'}\n                                            onChange={handleStakingChange}\n                                            className=\"mr-2\"\n                                        />\n                                        <span className=\"text-lg\">Smart Staking </span>\n                                    </label>\n                                </div>\n                                <button\n                                    onClick={handleStakingConfirm}\n                                    className=\"w-full py-3 bg-blue-600 text-white font-bold rounded-md hover:bg-blue-700 transition-colors duration-300\"\n                                >\n                                    Confirm Staking Option\n                                </button>\n                            </div>\n                        )}\n\n                        {showQRCode && (\n                            <div className=\"mt-4 text-center\">\n                                <p className=\"text-lg mb-4\">Please complete your payment within <span className=\"font-bold\">{Math.floor(timeLeft / 60)}:{timeLeft % 60}</span> minutes.</p>\n                                <p className=\"text-lg break-all\"><strong>Wallet Address:</strong> {walletAddress}</p>\n                                {qrCodeUrl && <img src={qrCodeUrl} alt=\"QR Code\" className=\"mx-auto\" style={{ width: '200px', height: '200px' }} />}\n                                <button\n                                    onClick={handlePaymentDone}\n                                    className=\"mt-4 w-full py-3 bg-green-500 text-white font-bold rounded-md hover:bg-green-600 transition-colors duration-300\"\n                                >\n                                    Payment Done\n                                </button>\n                            </div>\n                        )}\n                    </>\n                )}\n\n                {isUTRVisible && (\n                    <div className=\"mt-8\">\n                        <h4 className=\"text-lg font-semibold mb-4\">Enter 64 digit Transaction ID to Complete Purchase</h4>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter Transaction ID\"\n                            value={utr}\n                            onChange={(e) => setUTR(e.target.value)}\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                        <button\n                            onClick={handleSubmitUTR}\n                            className=\"mt-4 w-full py-3 bg-green-500 text-white font-bold rounded-md hover:bg-green-600 transition-colors duration-300\"\n                            disabled={isSubmitting}\n                        >\n                            {isSubmitting ? 'Submitting Transaction ID...' : 'Submit Transaction ID'}\n                        </button>\n                    </div>\n                )}\n\n                {message && (\n                    <p className={`mt-6 text-center ${message.includes('successfully') ? 'text-green-600' : 'text-red-600'} font-semibold`}>\n                        {message}\n                    </p>\n                )}\n\n                {redirectCountdown !== null && (\n                    <p className=\"mt-4 text-center text-gray-600 font-semibold\">\n                        Redirecting to dashboard in {redirectCountdown} second{redirectCountdown !== 1 ? 's' : ''}.\n                    </p>\n                )}\n            </TitleCard>\n        </div>\n    );\n}\n\nexport default PackageDetails;","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport PackageDetails from '../../features/tokenpackages/PackageDetails'\n\nfunction InternalPage(){\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Package Details\"}))\n      }, [])\n      \n    return(\n        <PackageDetails />\n    )\n}\n\nexport default InternalPage"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","packageId","useParams","useState","packageDetails","setPackageDetails","tokenValue","setTokenValue","calculatedTokens","setCalculatedTokens","message","setMessage","utr","setUTR","isUTRVisible","setIsUTRVisible","redirectCountdown","setRedirectCountdown","paymentStarted","setPaymentStarted","timeLeft","setTimeLeft","showQRCode","setShowQRCode","qrCodeUrl","setQRCodeUrl","amountInINR","setAmountInINR","isSubmitting","setIsSubmitting","showStakingOptions","setShowStakingOptions","stakingType","setStakingType","navigate","useNavigate","dispatch","useDispatch","fetchDataWithRetry","url","retries","axios","timeout","res","data","useEffect","clearNotification","fetchPackageDetails","console","error","showNotification","status","fetchTokenValue","headers","Authorization","localStorage","getItem","tokens","Math","floor","price","fetchUSDRate","rateInINR","rate","toFixed","fetchQRCodeWithRetry","responseType","response","imageBlob","Blob","type","imageUrl","URL","createObjectURL","warn","timer","setTimeout","clearTimeout","interval","setInterval","prevCountdown","clearInterval","handleSubmitUTR","trim","length","window","confirm","token","submitUTRWithRetry","_id","packageAmount","packageName","name","stackingPeriod","stacking_period","min_tokens_req","handleStakingChange","e","target","value","displayedTokens","TitleCard","feature1","feature2","feature3","feature4","onClick","checked","onChange","src","alt","style","width","height","placeholder","disabled","includes","setPageTitle"],"sourceRoot":""}